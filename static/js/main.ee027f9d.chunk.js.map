{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/reduxActions.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionSetFilter","filter","ContactList","useSelector","state","items","dispatch","useDispatch","length","filterInput","contact","name","toLowerCase","includes","getVisibleContacts","map","phone","onClick","className","style","button__delete","ContactForm","useState","setName","setPhone","handleChangeForm","target","value","console","log","validateFrom","arrayItems","nameContact","isExistContact","find","alert","handleCheckUniqueContact","toast","onSubmit","e","preventDefault","uuidv4","onAdd","type","placeholder","onChange","Filter","input__filter","valueInput","App","reducerContacts","createReducer","reducerFilter","_","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee027f9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__delete\":\"ContactList_button__delete__3Zboc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__filter\":\"Filter_input__filter__1qs6r\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst actionAddContact = createAction('items/add', newContact => ({\n  payload: newContact,\n}));\n\nconst actionRemoveContact = createAction('items/remove', id => ({\n  payload: id,\n}));\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\n\nexport { actionAddContact, actionRemoveContact, actionSetFilter };\n","import style from './ContactList.module.css';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRemoveContact } from '../../redux/reduxActions';\n\nconst ContactList = () => {\n  const { items, filter } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onRemove = valueInput => dispatch(actionRemoveContact(valueInput));\n\n  const getVisibleContacts = (items, filterInput) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterInput.toLowerCase()),\n    );\n  };\n\n  if (items.length === 0) return null;\n\n  return (\n    <ul>\n      {getVisibleContacts(items, filter).map(({ id, name, phone }) => {\n        return (\n          <li key={id}>\n            {name} : {phone}\n            <button\n              onClick={() => {\n                onRemove(id);\n              }}\n              className={style.button__delete}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { actionAddContact } from '../../redux/reduxActions';\n\nfunction ContactForm() {\n  const { items } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onAdd = newContact => dispatch(actionAddContact(newContact));\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        console.log('Sorry, we are not have ' + name + '.');\n    }\n  };\n  const handleCheckUniqueContact = (arrayItems, nameContact) => {\n    const isExistContact = !!arrayItems.find(\n      contact => contact.name === nameContact,\n    );\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  const validateFrom = () => {\n    if (!name || !phone) {\n      toast('Some filed is empty');\n      return false;\n    }\n\n    return handleCheckUniqueContact(items, name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    const isValidForm = validateFrom();\n\n    if (!isValidForm) return;\n\n    const newContact = { id: uuidv4(), name, phone };\n    resetForm();\n    return onAdd(newContact);\n  };\n\n  return (\n    <form onSubmit={handleFromSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      ></input>\n      <input\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter phone number\"\n        value={phone}\n        onChange={handleChangeForm}\n      ></input>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionSetFilter } from '../../redux/reduxActions';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleFilterChange = valueInput =>\n    dispatch(actionSetFilter(valueInput));\n  return (\n    <input\n      className={style.input__filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => handleFilterChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\nexport default Filter;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport ContactList from './components/ContactList/ContactList.js';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport Filter from './components/Filter/Filter.js';\nimport style from './App.module.css';\n\nfunction App() {\n  return (\n    <>\n      <h2>From Contact</h2>\n      <ContactForm />\n      <h2>Contacts list</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer></ToastContainer>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionSetFilter,\n} from './reduxActions';\n\nconst reducerContacts = createReducer([], {\n  [actionAddContact]: (state, { payload }) => {\n    const itemsAdd = [...state, payload];\n    return itemsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const itemsRemove = [...state.filter(contact => contact.id !== payload)];\n    return itemsRemove;\n  },\n});\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\nexport const rootReducer = combineReducers({\n  items: reducerContacts,\n  filter: reducerFilter,\n});\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nexport const store = createStore(rootReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}